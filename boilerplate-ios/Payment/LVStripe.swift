//
//  LVStripe.swift
//  boilerplate
//
//  Created by Leo Vigna on 22/12/2017.
//  Copyright Â© 2017 Leo Vigna. All rights reserved.
//

import Foundation
import PromiseKit
import Stripe

///Connect to the API for Stripe interactions
struct LVStripe {
    static let APIClient = LVAPI(baseUrl: LVConstants.STRIPE_API_URL);
    
    /**
     Create Stripe Connect Account.
     - parameter email: Email of new account.
     - returns: Promise with http response. [stripeId: id]
     */
    static func signupAccount(email:String) -> Promise<Dictionary<String, Any>> {
        print(#function)
        let params = ["email": email]
        return APIClient.post(url: "/signupAccount", parameters: params)
    }
    
    /**
     Update Stripe information
     - parameter stripeId: Stripe id.
     - parameter updates: Updates to post.
     - returns: Promise with http response. [stripeId: id]
     */
    static func updateAccount(stripeId:String, updates: [String: Any]) -> Promise<Dictionary<String, Any>> {
        print(#function)
        let params = ["stripeId": stripeId,
                      "updates": updates] as [String : Any]
        return APIClient.post(url: "/updateAccount", parameters: params);
    }
    
    /**
     Adds a new payment method to a Stripe account.
     - parameter stripeId: Stripe id.
     - parameter token: Payment token generated by Stripe.
     - returns: Promise with http response. [stripeId: id]
     */
    static func addCard(stripeId: String,token: STPToken) -> Promise<Dictionary<String,Any>> {
        print(#function)
        let params = ["stripeId": stripeId, "token": token.tokenId]
        return APIClient.post(url: "/addCard", parameters: params)
    }
    
    /**
     Adds a new charge to a Stripe account.
     - parameter stripeId: Stripe id.
     - parameter token: Payment token generated by Stripe.
     - returns: Promise with http response. [stripeId: id]
     */
    static func addCharge(stripeId: String, amount: Int) -> Promise<Dictionary<String,Any>> {
        print(#function)
        let params:[String: Any] = ["stripeId": stripeId, "amount": amount]
        return APIClient.post(url: "/addCharge", parameters: params)
    }
    
    /**
     Gets ephemeral keys to make multiple updates.
     - parameter stripeId: Stripe id.
     - returns: Promise with http response. [stripeId: id, key: key]
     */
    static func ephemeralKey(stripeId: String) -> Promise<Dictionary<String,Any>> {
        print(#function)
        let params:[String: Any] = ["stripeId": stripeId];
        return APIClient.post(url: "/ephemeralKey", parameters: params)
    }
}
